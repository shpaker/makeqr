[tool.poetry]
name = "MakeQR"
version = "0.1.0"
description = "Generate QR cards for any occasion"
authors = ["Aleksandr Shpak <shpaker@gmail.com>"]
classifiers=[
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
readme = "README.md"
repository = "https://github.com/shpaker/makeqr"

[tool.poetry.scripts]
makeqr = 'makeqr.__main__:main'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.9,<4.0.0"
click = ">=8.1"
pydantic = {extras = ["email"], version = ">=2.0"}
qrcode = {extras = ["pil"], version = ">=7.0"}

[tool.poetry.group.dev.dependencies]
mypy = "^1.8"
pytest = "^8.0"
ruff = "^0.3"
types-pillow = "^10.2.0.20240213"

[tool.ruff]
target-version = "py39"
line-length = 120
exclude = [
  ".venv",
]
lint.ignore = [
  "PLR0913",  # Too many arguments to function call
]
lint.flake8-tidy-imports.ban-relative-imports = "all"
lint.mccabe.max-complexity = 20
lint.select = [
  "F", # Pyflakes
  # "E/W", # pycodestyle
  "C90", # mccabe
   "I", # isort
  # "N", # pep8-naming
  # "D", # pydocstyle
  "UP", # pyupgrade
  "YTT", # flake8-2020
  # "ANN", # flake8-annotations
  # "ASYNC", # flake8-async
  # "TRIO", # flake8-trio
  # "S", # flake8-bandit
  # "BLE", # flake8-blind-except
  # "FBT", # flake8-boolean-trap
  "B", # flake8-bugbear
  # "A", # flake8-builtins
  # "COM", # flake8-commas
  # "CPY", # flake8-copyright
  "C4", # flake8-comprehensions
  # "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  # "DJ", # flake8-django
  # "EM", # flake8-errmsg
  "EXE", # flake8-executable
  # "FA", # flake8-future-annotations
  "ISC", # flake8-implicit-str-concat
  # "ICN", # flake8-import-conventions
  "G", # flake8-logging-format
  "INP", # flake8-no-pep420
  # "PIE", # flake8-pie
  "T20", # flake8-print
  # "PYI", # flake8-pyi
  # "PT", # flake8-pytest-style
  # "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  # "SLOT", # flake8-slots
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  # "TCH", # flake8-type-checking
  # "INT", # flake8-gettext
  # "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  # "TD", # flake8-todos
  # "FIX", # flake8-fixme
  "ERA", # eradicate
  # "PD", # pandas-vet
  # "PGH", # pygrep-hooks
  "PL", # Pylint
  # "TRY", # tryceratops
  # "FLY", # flynt
  # "NPY", # NumPy-specific rules
  # "AIR", # Airflow
  # "PERF", # Perflint
  # "FURB", # refurb
  # "LOG", # flake8-logging
  "RUF", # Ruff-specific rules
]

[tool.mypy]
python_version = 3.9
plugins = [
  "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

